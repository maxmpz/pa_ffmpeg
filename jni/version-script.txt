{
	global:
		JNI_On*;
		
		ff_ape_decoder;
		ff_mp3float_decoder;
		ff_mp2float_decoder;
		ff_mp3adufloat_decoder;
		ff_mp3on4float_decoder;
		ff_flv_demuxer; 
		
		avcodec_find_decoder;
		avcodec_open2;
		av_dump_format;
		avcodec_configuration;
		swresample_configuration;
		av_get_profile_name;
		avcodec_profile_name;
		av_dict_set_int;
		av_dict_count;
		av_dict_get_string;
		av_opt_find2;
		av_dict_get;
		av_dict_set;
		av_dict_free;
		av_rescale_q;
		av_strerror;
		av_get_default_channel_layout;
		avformat_open_input;
		avformat_find_stream_info;
		avformat_alloc_context;
		avformat_close_input;
		avcodec_close;
		av_read_frame;
		av_read_pause;
		av_read_play;
		av_init_packet;
		av_dup_packet;
		av_free_packet;
		av_sample_fmt_is_planar;
		av_get_bytes_per_sample;
		avcodec_decode_audio4;
		av_frame_unref;
		av_seek_frame;
		ff_update_cur_dts;
		avcodec_flush_buffers;
		av_register_all;
		av_log_set_callback;
		av_strstart;
		av_stristr;
		avio_size;
		av_lockmgr_register;
		av_match_ext;
		avio_alloc_context;
		avio_context_free;
		av_default_item_name;
		av_find_input_format;

		swri_oldapi_conv_flt_to_s16_neon;
		swr_alloc;		
		swr_free;
		swr_init;
		swr_get_delay;
		swr_convert;
		swr_drop_output;
		swr_get_out_samples;
		
		av_rdft_end;
		av_rdft_init;
		av_rdft_calc;
		
		av_base64_decode;
		av_base64_encode;
		av_lfg_init;
		
		av_malloc;
		av_free;
		av_freep;
		av_sha_alloc;
		av_sha_init;
		av_sha_update;
		av_sha_final;
		
		mbedtls_pk_free;
		mbedtls_pk_init;
		mbedtls_pk_parse_public_key;
		mbedtls_pk_parse_key;
		mbedtls_pk_sign;
		mbedtls_pk_verify;
		mbedtls_cipher_init;
		mbedtls_cipher_info_from_type;
		mbedtls_cipher_setup;
		mbedtls_cipher_free;
		mbedtls_cipher_update;
		mbedtls_cipher_setkey;
		mbedtls_cipher_finish;
		mbedtls_cipher_set_iv;
		mbedtls_cipher_set_padding_mode;
		mbedtls_cipher_reset;
		
	local: *;
};